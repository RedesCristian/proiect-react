{"version":3,"file":"static/js/530.815924b7.chunk.js","mappings":"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","sources":["constants/TransactionConstants.js","webpack://react-homework-template/./src/components/ButtonAddTransactions/ButtonAddTransactions.module.css?aeab","components/ButtonAddTransactions/ButtonAddTransactions.jsx","webpack://react-homework-template/./src/components/TransactionItem/TransactionItem.module.css?cf5d","components/TransactionItem/TransactionItem.jsx","webpack://react-homework-template/./src/components/TransactionsList/TransactionsList.module.css?185a","components/TransactionsList/TransactionsList.jsx","webpack://react-homework-template/./src/components/TransactionTableRow/TransactionTableRow.module.css?3bd5","components/TransactionTableRow/TransactionTableRow.jsx","webpack://react-homework-template/./src/components/TransactionsTable/TransactionsTable.module.css?4613","components/TransactionsTable/TransactionsTable.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","webpack://react-homework-template/./src/components/ModalDeleteTransaction/ModalDeleteTransaction.module.css?ce7e","components/ModalDeleteTransaction/ModalDeleteTransaction.jsx","webpack://react-homework-template/./src/components/ModalAddTransaction/ModalAddTransaction.module.css?40ee","webpack://react-homework-template/./src/components/AddTransactionForm/AddTransactionForm.module.css?c763","components/AddTransactionForm/AddTransactionForm.jsx","components/ModalAddTransaction/ModalAddTransaction.jsx","webpack://react-homework-template/./src/components/ModalEditTransaction/ModalEditTransaction.module.css?dc68","webpack://react-homework-template/./src/components/EditTransactionForm/EditTransactionForm.module.css?3678","components/EditTransactionForm/EditTransactionForm.jsx","components/ModalEditTransaction/ModalEditTransaction.jsx","pages/HomePage/HomePage.jsx","pages/HomePage/RestrictedHomePage.jsx","redux/transactions/selectors.js"],"sourcesContent":["const transactionCategories = [\n  {\n    id: 'c9d9e447-1b83-4238-8712-edc77b18b739',\n    name: 'Main expenses',\n    type: 'EXPENSE',\n  },\n  {\n    id: '27eb4b75-9a42-4991-a802-4aefe21ac3ce',\n    name: 'Products',\n    type: 'EXPENSE',\n  },\n  {\n    id: '3caa7ba0-79c0-40b9-ae1f-de1af1f6e386',\n    name: 'Car',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'bbdd58b8-e804-4ab9-bf4f-695da5ef64f4',\n    name: 'Self care',\n    type: 'EXPENSE',\n  },\n  {\n    id: '76cc875a-3b43-4eae-8fdb-f76633821a34',\n    name: 'Child care',\n    type: 'EXPENSE',\n  },\n  {\n    id: '128673b5-2f9a-46ae-a428-ec48cf1effa1',\n    name: 'Household products',\n    type: 'EXPENSE',\n  },\n  {\n    id: '1272fcc4-d59f-462d-ad33-a85a075e5581',\n    name: 'Education',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'c143130f-7d1e-4011-90a4-54766d4e308e',\n    name: 'Leisure',\n    type: 'EXPENSE',\n  },\n  {\n    id: '719626f1-9d23-4e99-84f5-289024e437a8',\n    name: 'Other expenses',\n    type: 'EXPENSE',\n  },\n  {\n    id: '3acd0ecd-5295-4d54-8e7c-d3908f4d0402',\n    name: 'Entertainment',\n    type: 'EXPENSE',\n  },\n  {\n    id: '063f1132-ba5d-42b4-951d-44011ca46262',\n    name: 'Income',\n    type: 'INCOME',\n  },\n];\n\nconst getTransactionId = transactionCategory => {\n  const transactionTargeted = transactionCategories.find(\n    item => item.name === transactionCategory\n  );\n\n  return transactionTargeted.id;\n};\n\nconst getTransactionCategory = transactionId => {\n  const transactionTargeted = transactionCategories.find(\n    item => item.id === transactionId\n  );\n\n  return transactionTargeted.name;\n};\n\nconst formatData = unixData => {\n  const year = new Date(unixData).getFullYear();\n  const mounth = new Date(unixData).getMonth() + 1;\n  const day = new Date(unixData).getDate();\n\n  const doubleDigitsFormatMounth = String(mounth).padStart(2, 0);\n  const doubleDigitsFormatDay = String(day).padStart(2, 0);\n\n  return `${doubleDigitsFormatDay}.${doubleDigitsFormatMounth}.${year}`;\n};\n\nconst Months_OPTIONS = [\n  { value: 1, label: 'January' },\n  { value: 2, label: 'February' },\n  { value: 3, label: 'March' },\n  { value: 4, label: 'April' },\n  { value: 5, label: 'May' },\n  { value: 6, label: 'June' },\n  { value: 7, label: 'July' },\n  { value: 8, label: 'August' },\n  { value: 9, label: 'September' },\n  { value: 10, label: 'October' },\n  { value: 11, label: 'November' },\n  { value: 12, label: 'December' },\n];\n\nconst CURRENT_YEAR = new Date().getFullYear();\n\nconst YEARS_OPTIONS = [CURRENT_YEAR, CURRENT_YEAR - 1, CURRENT_YEAR - 2];\n\nconst getTrasactionCategoryColor = category => {\n  switch (category) {\n    case 'Main expenses':\n      return 'rgba(254, 208, 87, 1)';\n\n    case 'Products':\n      return 'rgba(255, 0, 255, 1)';\n\n    case 'Car':\n      return 'rgba(253, 148, 152, 1)';\n\n    case 'Self care':\n      return 'rgba(197, 186, 255, 1)';\n\n    case 'Child care':\n      return 'rgba(127, 255, 0, 1)';\n\n    case 'Household products':\n      return 'rgba(74, 86, 226, 1)';\n\n    case 'Education':\n      return 'rgba(0, 255, 255, 1)';\n\n    case 'Leisure':\n      return 'rgba(255, 119, 0, 1)';\n\n    case 'Other expenses':\n      return 'rgba(0, 173, 132, 1)';\n\n    case 'Entertainment':\n      return 'rgba(177, 15, 72, 1)';\n\n    default:\n      return 'rgb(128, 128, 128)';\n  }\n};\n\nexport {\n  transactionCategories,\n  getTransactionId,\n  getTransactionCategory,\n  formatData,\n  Months_OPTIONS,\n  YEARS_OPTIONS,\n  getTrasactionCategoryColor,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ButtonOpenModal\":\"ButtonAddTransactions_ButtonOpenModal__keHme\"};","import styles from './ButtonAddTransactions.module.css';\nimport icons from '../../images/icons/sprite.svg';\n\nconst ButtonAddTransactions = ({ openAddModall }) => {\n  return (\n    <button\n      className={styles.ButtonOpenModal}\n      type=\"button\"\n      onClick={openAddModall}\n    >\n      <svg>\n        <use href={`${icons}#addBtn-icon`}></use>\n      </svg>\n    </button>\n  );\n};\n\nexport default ButtonAddTransactions;\n","// extracted by mini-css-extract-plugin\nexport default {\"TransactionItem\":\"TransactionItem_TransactionItem__RE6Tt\",\"row\":\"TransactionItem_row__JG4JI\",\"deleteButton\":\"TransactionItem_deleteButton__ExfPy\",\"editButton\":\"TransactionItem_editButton__1di87\",\"editText\":\"TransactionItem_editText__znK7c\",\"editIcon\":\"TransactionItem_editIcon__Q5FvC\",\"fixData\":\"TransactionItem_fixData__rxreU\",\"dynamicData\":\"TransactionItem_dynamicData__s1Sxa\",\"forthRow\":\"TransactionItem_forthRow__FRnhR\",\"sixthRow\":\"TransactionItem_sixthRow__HK0jD\",\"incomeText\":\"TransactionItem_incomeText__U8eMa\",\"expenseText\":\"TransactionItem_expenseText__JkPdK\",\"incomeBorder\":\"TransactionItem_incomeBorder__3UKM7\",\"expenseBorder\":\"TransactionItem_expenseBorder__MPdVW\"};","import styles from './TransactionItem.module.css';\nimport icons from '../../images/icons/sprite.svg';\nimport {\n  formatData,\n  getTransactionCategory,\n} from '../../constants/TransactionConstants';\nimport { useDispatch } from 'react-redux';\nimport {\n  setTrasactionForUpdate,\n  setTrasactionIdForDelete,\n} from '../../redux/transactions/slice';\n\nconst TransactionItem = ({ transaction, openDeleteModal, openEditModal }) => {\n  const { type, categoryId, comment, amount, transactionDate } = transaction;\n\n  const dispatch = useDispatch();\n\n  const handleDeleteClick = () => {\n    openDeleteModal();\n    dispatch(setTrasactionIdForDelete(transaction.id));\n  };\n\n  const handleEditClick = () => {\n    openEditModal();\n    dispatch(setTrasactionForUpdate({ ...transaction }));\n  };\n\n  let textClass = '';\n  let borderClass = '';\n\n  if (type === 'INCOME') {\n    textClass = styles.incomeText;\n    borderClass = styles.incomeBorder;\n  } else if (type === 'EXPENSE') {\n    textClass = styles.expenseText;\n    borderClass = styles.expenseBorder;\n  }\n\n  return (\n    <li className={`${styles.TransactionItem} ${borderClass}`}>\n      <div className={`${styles.row} ${styles.firstRow}`}>\n        <span className={styles.fixData}>Date</span>\n        <span className={styles.dynamicData}>\n          {formatData(transactionDate)}\n        </span>\n      </div>\n      <div className={`${styles.row} ${styles.secondRow}`}>\n        <span className={styles.fixData}>Type</span>\n        <span className={styles.dynamicData}>\n          {type === 'INCOME' ? '+' : '-'}\n        </span>\n      </div>\n      <div className={`${styles.row} ${styles.thirdRow}`}>\n        <span className={styles.fixData}>Category</span>\n        <span className={styles.dynamicData}>\n          {getTransactionCategory(categoryId)}\n        </span>\n      </div>\n      <div className={`${styles.row} ${styles.forthRow}`}>\n        <span className={styles.fixData}>Comment</span>\n        <span className={styles.dynamicData}>{comment}</span>\n      </div>\n      <div className={`${styles.row} ${styles.fifthRow}`}>\n        <span className={styles.fixData}>Sum</span>\n        <span className={`${styles.dynamicData} ${textClass}`}>\n          {type === 'INCOME' ? amount : amount * -1}\n        </span>\n      </div>\n      <div className={`${styles.row} ${styles.sixthRow}`}>\n        <button\n          type=\"button\"\n          className={styles.deleteButton}\n          onClick={handleDeleteClick}\n        >\n          Delete\n        </button>\n        <button\n          className={styles.editButton}\n          type=\"button\"\n          onClick={handleEditClick}\n        >\n          <svg className={styles.editIcon}>\n            <use href={`${icons}#icon-edit`}></use>\n          </svg>\n          <span className={styles.editText}>Edit</span>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default TransactionItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"TransactionList\":\"TransactionsList_TransactionList__NWyGw\"};","import TransactionItem from 'components/TransactionItem/TransactionItem';\nimport styles from './TransactionsList.module.css';\n\nconst TransactionsList = ({ data, openDeleteModal, openEditModal }) => {\n  return (\n    <ul className={styles.TransactionList}>\n      {data.map(item => (\n        <TransactionItem\n          key={item.id}\n          transaction={item}\n          openDeleteModal={openDeleteModal}\n          openEditModal={openEditModal}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TransactionsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"editIcon\":\"TransactionTableRow_editIcon__fwaXC\",\"dataRow\":\"TransactionTableRow_dataRow__VqR76\",\"incomeText\":\"TransactionTableRow_incomeText__UhPyD\",\"expenseText\":\"TransactionTableRow_expenseText__VRC0k\",\"editButton\":\"TransactionTableRow_editButton__9789z\",\"deleteButton\":\"TransactionTableRow_deleteButton__oRtoZ\",\"TransactionDateColumn\":\"TransactionTableRow_TransactionDateColumn__4pjo1\",\"TransactionCommentColumn\":\"TransactionTableRow_TransactionCommentColumn__ACesq\",\"TransactionDeleteColumn\":\"TransactionTableRow_TransactionDeleteColumn__EP-1e\",\"TransactionEditColumn\":\"TransactionTableRow_TransactionEditColumn__pwzPe\"};","import {\n  formatData,\n  getTransactionCategory,\n} from '../../constants/TransactionConstants';\nimport icons from '../../images/icons/sprite.svg';\nimport styles from './TransactionTableRow.module.css';\nimport {\n  setTrasactionForUpdate,\n  setTrasactionIdForDelete,\n} from '../../redux/transactions/slice';\nimport { useDispatch } from 'react-redux';\n\nconst TransactionTableRow = ({\n  transaction,\n  openDeleteModal,\n  openEditModal,\n}) => {\n  const { type, categoryId, comment, amount, transactionDate } = transaction;\n\n  const dispatch = useDispatch();\n\n  const handleDeleteClick = () => {\n    openDeleteModal();\n    dispatch(setTrasactionIdForDelete(transaction.id));\n  };\n\n  const handleEditClick = () => {\n    openEditModal();\n    dispatch(setTrasactionForUpdate({ ...transaction }));\n  };\n\n  return (\n    <tr className={styles.dataRow}>\n      <td className={styles.TransactionDateColumn}>\n        {formatData(transactionDate)}\n      </td>\n      <td className={styles.TransactionTypeColumn}>\n        {type === 'INCOME' ? '+' : '-'}\n      </td>\n      <td className={styles.TransactionCategoryColumn}>\n        {getTransactionCategory(categoryId)}\n      </td>\n      <td className={styles.TransactionCommentColumn}>{comment}</td>\n      <td\n        className={type === 'INCOME' ? styles.incomeText : styles.expenseText}\n      >\n        {type === 'INCOME' ? amount : amount * -1}\n      </td>\n      <td className={styles.TransactionEditColumn}>\n        <button\n          className={styles.editButton}\n          type=\"button\"\n          onClick={handleEditClick}\n        >\n          <svg className={styles.editIcon}>\n            <use href={`${icons}#icon-edit`}></use>\n          </svg>\n        </button>\n      </td>\n\n      <td className={styles.TransactionDeleteColumn}>\n        <button\n          className={styles.deleteButton}\n          type=\"button\"\n          onClick={handleDeleteClick}\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default TransactionTableRow;\n","// extracted by mini-css-extract-plugin\nexport default {\"TransactionTable\":\"TransactionsTable_TransactionTable__zDLed\",\"table\":\"TransactionsTable_table__xu6ZB\",\"tableHead\":\"TransactionsTable_tableHead__TQkmS\",\"tableHeadRow\":\"TransactionsTable_tableHeadRow__8UgMz\",\"dateColumn\":\"TransactionsTable_dateColumn__gX1HJ\",\"deleteColumn\":\"TransactionsTable_deleteColumn__M4Yv5\",\"typeColumn\":\"TransactionsTable_typeColumn__2tLRO\",\"categoryColumn\":\"TransactionsTable_categoryColumn__n4dSD\",\"commentColumn\":\"TransactionsTable_commentColumn__XOwlZ\",\"sumColumn\":\"TransactionsTable_sumColumn__oVceQ\"};","import TransactionTableRow from 'components/TransactionTableRow/TransactionTableRow';\nimport styles from './TransactionsTable.module.css';\n\nconst TransactionsTable = ({ data, openDeleteModal, openEditModal }) => {\n  return (\n    <div className={styles.TransactionsTable}>\n      <table className={styles.table}>\n        <thead className={styles.tableHead}>\n          <tr className={styles.tableHeadRow}>\n            <th className={styles.dateColumn}>Date</th>\n            <th className={styles.typeColumn}>Type</th>\n            <th className={styles.categoryColumn}>Category</th>\n            <th className={styles.commentColumn}>Comment</th>\n            <th className={styles.sumColumn}>Sum</th>\n            <th className={styles.editColumn}></th>\n            <th className={styles.deleteColumn}></th>\n          </tr>\n        </thead>\n        <tbody className={styles.tableBody}>\n          {data.map(item => (\n            <TransactionTableRow\n              key={item.id}\n              transaction={item}\n              openDeleteModal={openDeleteModal}\n              openEditModal={openEditModal}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TransactionsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"HomePage\":\"HomePage_HomePage__VnKTm\",\"noDataMessage\":\"HomePage_noDataMessage__gvEeD\"};","// extracted by mini-css-extract-plugin\nexport default {\"deleteModal\":\"ModalDeleteTransaction_deleteModal__Nm1OX\",\"modalContent\":\"ModalDeleteTransaction_modalContent__-UEQC\",\"buttonsWrapper\":\"ModalDeleteTransaction_buttonsWrapper__NdNeg\"};","import styles from './ModalDeleteTransaction.module.css';\nimport { useMediaQuery } from 'react-responsive';\n\nimport FormButton from 'components/common/FormButton/FormButton';\nimport Logo from 'components/common/Logo/Logo';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deteleTransaction } from '../../redux/transactions/operations';\nimport { selectTrasactionIdForDelete } from '../../redux/transactions/selectors';\nimport { getUserInfo } from '../../redux/auth/operations';\n\nconst ModalDeleteTransaction = ({ closeModal }) => {\n  const dispatch = useDispatch();\n\n  const trasactionIdForDelete = useSelector(selectTrasactionIdForDelete);\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n\n    const addCloseEvent = event => {\n      event.key === 'Escape' && closeModal();\n    };\n    document.addEventListener('keydown', addCloseEvent);\n\n    return () => {\n      document.body.style.overflow = 'auto';\n      document.removeEventListener('keydown', addCloseEvent);\n    };\n  });\n\n  const closeOnClickOutside = event => {\n    event.currentTarget === event.target && closeModal();\n  };\n\n  const screenCondition = useMediaQuery({ query: '(min-width: 768px)' });\n\n  const handleDeleteClick = () => [\n    dispatch(deteleTransaction(trasactionIdForDelete))\n      .unwrap()\n      .then(() => {\n        closeModal();\n        dispatch(getUserInfo());\n      })\n      .catch(error => {\n        console.log(error);\n      }),\n  ];\n\n  return (\n    <div className={styles.deleteModal} onClick={closeOnClickOutside}>\n      <div className={styles.modalContent}>\n        {screenCondition && <Logo variant={'formLogo'} />}\n\n        <p>Are you sure you want to detete this transaction?</p>\n\n        <div className={styles.buttonsWrapper}>\n          <FormButton\n            type={'button'}\n            text={'Delete'}\n            variant={'multiColorButtton'}\n            handlerFunction={handleDeleteClick}\n          />\n          <FormButton\n            type={'button'}\n            text={'cancel'}\n            variant={'whiteButtton'}\n            handlerFunction={() => closeModal()}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalDeleteTransaction;\n","// extracted by mini-css-extract-plugin\nexport default {\"addModal\":\"ModalAddTransaction_addModal__IkC7u\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"AddTransactionForm_modalContent__qBIxL\",\"formTitle\":\"AddTransactionForm_formTitle__r-hm1\",\"inputWrapper\":\"AddTransactionForm_inputWrapper__R9Xvu\",\"inputField\":\"AddTransactionForm_inputField__W8siC\",\"date\":\"AddTransactionForm_date__GisUm\",\"icon\":\"AddTransactionForm_icon__UIgh3\",\"buttonsWrapper\":\"AddTransactionForm_buttonsWrapper__UuNdd\",\"switcheWrapper\":\"AddTransactionForm_switcheWrapper__0od7t\",\"income\":\"AddTransactionForm_income__OkPZl\",\"expense\":\"AddTransactionForm_expense__n6q+7\",\"closeButton\":\"AddTransactionForm_closeButton__I1W2b\",\"category\":\"AddTransactionForm_category__i7RIc\",\"amount\":\"AddTransactionForm_amount__o0Wsg\",\"comment\":\"AddTransactionForm_comment__aMIOO\"};","import { useEffect, useState } from 'react';\nimport styles from './AddTransactionForm.module.css';\nimport FormButton from 'components/common/FormButton/FormButton';\nimport icons from '../../images/icons/sprite.svg';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport {\n  transactionCategories,\n  getTransactionId,\n} from '../../constants/TransactionConstants';\n\nimport { addTransaction } from '../../redux/transactions/operations';\nimport { getUserInfo } from '../../redux/auth/operations';\n\nimport { FiCalendar } from 'react-icons/fi';\n\nconst AddTransactionFormNew = ({ closeModal }) => {\n  const [isOnIncomeTab, setIsOnIncomeTab] = useState(false);\n  useEffect(() => {}, [isOnIncomeTab]);\n\n  const screenCondition = useMediaQuery({ query: '(min-width: 768px)' });\n\n  const dispatch = useDispatch();\n\n  const [startDate, setStartDate] = useState(new Date());\n\n  const initialValues = {\n    amount: '',\n    comment: '',\n  };\n\n  const validationSchema = isOnIncomeTab\n    ? Yup.object({\n        amount: Yup.string().required('Required* '),\n        comment: Yup.string().required('Required*'),\n      })\n    : Yup.object({\n        amount: Yup.string().required('Required*'),\n        comment: Yup.string().required('Required*'),\n        category: Yup.string().required('Required*'),\n      });\n\n  const handleSubmit = (values, { setSubmitting, setStatus }) => {\n    setSubmitting(true);\n\n    dispatch(\n      addTransaction({\n        transactionDate: startDate,\n        type: isOnIncomeTab ? 'INCOME' : 'EXPENSE',\n        categoryId: getTransactionId(values.category || 'Income'),\n        comment: values.comment,\n        amount: isOnIncomeTab ? values.amount : 0 - values.amount,\n      })\n    )\n      .unwrap()\n      .then(() => {\n        closeModal();\n        dispatch(getUserInfo());\n      })\n      .catch(error => {\n        setStatus({ success: false, error: error });\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <div className={styles.modalContent}>\n      {screenCondition && (\n        <button className={styles.closeButton} onClick={() => closeModal()}>\n          <svg>\n            <use href={`${icons}#icon-close`}></use>\n          </svg>\n        </button>\n      )}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <h2 className={styles.formTitle}>Add transaction</h2>\n\n            <div className={styles.switcheWrapper}>\n              <span className={`${isOnIncomeTab ? styles.income : null}`}>\n                Income\n              </span>\n\n              <input\n                type=\"checkbox\"\n                id=\"switcherButton\"\n                onChange={() => setIsOnIncomeTab(!isOnIncomeTab)}\n                checked={!isOnIncomeTab}\n              />\n              <label htmlFor=\"switcherButton\"></label>\n\n              <span className={`${!isOnIncomeTab ? styles.expense : null}`}>\n                Expense\n              </span>\n            </div>\n\n            <div className={styles.inputWrapper}>\n              {!isOnIncomeTab && (\n                <div className={`${styles.inputField} ${styles.category}`}>\n                  <Field as=\"select\" name=\"category\" autoFocus required>\n                    <option value=\"\" hidden>\n                      Select your category\n                    </option>\n                    {transactionCategories.slice(0, -1).map(item => (\n                      <option key={item.id}>{item.name}</option>\n                    ))}\n                  </Field>\n                  <ErrorMessage name=\"category\" component=\"p\" />\n                </div>\n              )}\n\n              <div className={`${styles.inputField} ${styles.amount}`}>\n                <Field type=\"number\" name=\"amount\" min=\"1\" placeholder=\"0.00\" />\n                <ErrorMessage name=\"amount\" component=\"p\" />\n              </div>\n\n              <div className={`${styles.inputField} ${styles.date}`}>\n                <ReactDatePicker\n                  dateFormat=\"dd.MM.yyyy\"\n                  selected={startDate}\n                  onChange={date => setStartDate(date)}\n                  calendarStartDay={1}\n                />\n                <FiCalendar className={styles.icon} />\n              </div>\n\n              <div className={`${styles.inputField} ${styles.comment}`}>\n                <Field type=\"text\" name=\"comment\" placeholder=\"Comment\" />\n                <ErrorMessage name=\"comment\" component=\"p\" />\n              </div>\n            </div>\n\n            <div className={styles.buttonsWrapper}>\n              <FormButton\n                type={'submit'}\n                text={'Add'}\n                variant={'multiColorButtton'}\n                isDisabled={isSubmitting}\n              />\n              <FormButton\n                type={'button'}\n                text={'cancel'}\n                variant={'whiteButtton'}\n                handlerFunction={() => closeModal()}\n              />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default AddTransactionFormNew;\n","import { useEffect } from 'react';\nimport styles from './ModalAddTransaction.module.css';\nimport AddTransactionForm from 'components/AddTransactionForm/AddTransactionForm';\n\nconst ModalAddTransactionNew = ({ closeModal }) => {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n\n    const addCloseEvent = event => {\n      event.key === 'Escape' && closeModal();\n    };\n    document.addEventListener('keydown', addCloseEvent);\n\n    return () => {\n      document.body.style.overflow = 'auto';\n      document.removeEventListener('keydown', addCloseEvent);\n    };\n  });\n\n  const closeOnClickOutside = event => {\n    event.target === event.currentTarget && closeModal();\n  };\n\n  return (\n    <>\n      <div className={styles.addModal} onClick={closeOnClickOutside}>\n        <AddTransactionForm closeModal={closeModal} />\n      </div>\n    </>\n  );\n};\n\nexport default ModalAddTransactionNew;\n","// extracted by mini-css-extract-plugin\nexport default {\"editModal\":\"ModalEditTransaction_editModal__E6+uZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EditTransactionForm_modalContent__l56AA\",\"formTitle\":\"EditTransactionForm_formTitle__5nb4x\",\"inputWrapper\":\"EditTransactionForm_inputWrapper__Ce0f7\",\"inputField\":\"EditTransactionForm_inputField__MwrYU\",\"category\":\"EditTransactionForm_category__CbJcd\",\"date\":\"EditTransactionForm_date__qWumk\",\"icon\":\"EditTransactionForm_icon__HdHVD\",\"buttonsWrapper\":\"EditTransactionForm_buttonsWrapper__om91j\",\"switcheWrapper\":\"EditTransactionForm_switcheWrapper__YhjCP\",\"income\":\"EditTransactionForm_income__5YDDy\",\"expense\":\"EditTransactionForm_expense__XO1iM\",\"closeButton\":\"EditTransactionForm_closeButton__u+1zt\",\"amount\":\"EditTransactionForm_amount__lu+WW\",\"comment\":\"EditTransactionForm_comment__0EG8g\"};","import { useState } from 'react';\nimport styles from './EditTransactionForm.module.css';\n\nimport FormButton from 'components/common/FormButton/FormButton';\nimport icons from '../../images/icons/sprite.svg';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { getTransactionCategory } from '../../constants/TransactionConstants';\n\nimport { useSelector } from 'react-redux';\nimport { selectTransactionForUpdate } from '../../redux/transactions/selectors';\nimport { modifyTransaction } from '../../redux/transactions/operations';\nimport { getUserInfo } from '../../redux/auth/operations';\nimport { FiCalendar } from 'react-icons/fi';\n\nconst EditTransactionForm = ({ closeModal }) => {\n  const transactionForUpdate = useSelector(selectTransactionForUpdate);\n\n  const { id, type, amount, comment, transactionDate, categoryId } =\n    transactionForUpdate;\n\n  const [startDate, setStartDate] = useState(new Date(transactionDate));\n\n  console.log(startDate);\n\n  const isOnIncomeTab = type === 'INCOME' ? true : false;\n\n  const screenCondition = useMediaQuery({ query: '(min-width: 768px)' });\n\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    amount: type === 'INCOME' ? amount : amount * -1,\n    comment,\n  };\n\n  const validationSchema = Yup.object({\n    amount: Yup.string().required('Required*'),\n    comment: Yup.string().required('Required*'),\n  });\n\n  const handleSubmit = (values, { setSubmitting, setStatus }) => {\n    setSubmitting(true);\n    dispatch(\n      modifyTransaction({\n        transactionId: id,\n        transactionData: {\n          transactionDate: startDate,\n          comment: values.comment,\n          amount: isOnIncomeTab ? values.amount : 0 - values.amount,\n        },\n      })\n    )\n      .unwrap()\n      .then(() => {\n        closeModal();\n        dispatch(getUserInfo());\n      })\n      .catch(error => {\n        setStatus({ success: false, error: error });\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <div className={styles.modalContent}>\n      {screenCondition && (\n        <button className={styles.closeButton} onClick={() => closeModal()}>\n          <svg>\n            <use href={`${icons}#icon-close`}></use>\n          </svg>\n        </button>\n      )}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <h2 className={styles.formTitle}>Edit transaction</h2>\n\n            <div className={styles.switcheWrapper}>\n              <span className={`${isOnIncomeTab ? styles.income : null}`}>\n                Income\n              </span>\n              <span className={styles.delimeter}>/</span>\n              <span className={`${!isOnIncomeTab ? styles.expense : null}`}>\n                Expense\n              </span>\n            </div>\n\n            <div className={styles.inputWrapper}>\n              {!isOnIncomeTab && (\n                <div className={`${styles.inputField} ${styles.category}`}>\n                  Category: <span>{getTransactionCategory(categoryId)}</span>\n                </div>\n              )}\n\n              <div className={`${styles.inputField} ${styles.amount}`}>\n                <Field type=\"number\" name=\"amount\" min=\"1\" placeholder=\"0.00\" />\n                <ErrorMessage name=\"amount\" component=\"p\" />\n              </div>\n\n              <div className={`${styles.inputField} ${styles.date}`}>\n                <ReactDatePicker\n                  dateFormat=\"dd.MM.yyyy\"\n                  selected={startDate}\n                  onChange={date => setStartDate(date)}\n                  calendarStartDay={1}\n                />\n                <FiCalendar className={styles.icon} />\n              </div>\n\n              <div className={`${styles.inputField} ${styles.comment}`}>\n                <Field type=\"text\" name=\"comment\" placeholder=\"Comment\" />\n                <ErrorMessage name=\"comment\" component=\"p\" />\n              </div>\n            </div>\n\n            <div className={styles.buttonsWrapper}>\n              <FormButton\n                type={'submit'}\n                text={'save'}\n                variant={'multiColorButtton'}\n                isDisabled={isSubmitting}\n              />\n              <FormButton\n                type={'button'}\n                text={'cancel'}\n                variant={'whiteButtton'}\n                handlerFunction={() => closeModal()}\n              />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default EditTransactionForm;\n","import { useEffect } from 'react';\nimport styles from './ModalEditTransaction.module.css';\nimport EditTransactionForm from 'components/EditTransactionForm/EditTransactionForm';\n\nconst ModalEditTransactionNew = ({ closeModal }) => {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n\n    const addCloseEvent = event => {\n      event.key === 'Escape' && closeModal();\n    };\n    document.addEventListener('keydown', addCloseEvent);\n\n    return () => {\n      document.body.style.overflow = 'auto';\n      document.removeEventListener('keydown', addCloseEvent);\n    };\n  });\n\n  const closeOnClickOutside = event => {\n    event.target === event.currentTarget && closeModal();\n  };\n\n  return (\n    <>\n      <div className={styles.editModal} onClick={closeOnClickOutside}>\n        <EditTransactionForm closeModal={closeModal} />\n      </div>\n    </>\n  );\n};\n\nexport default ModalEditTransactionNew;\n","import { useEffect, useState } from 'react';\n\nimport ButtonAddTransactions from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport TransactionsList from 'components/TransactionsList/TransactionsList';\nimport TransactionsTable from 'components/TransactionsTable/TransactionsTable';\nimport { useMediaQuery } from 'react-responsive';\nimport styles from './HomePage.module.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllTransactions } from '../../redux/transactions/selectors';\nimport { fetchAllTransactions } from '../../redux/transactions/operations';\n\nimport { createPortal } from 'react-dom';\nimport ModalDeleteTransaction from 'components/ModalDeleteTransaction/ModalDeleteTransaction';\nimport ModalAddTransactionNew from 'components/ModalAddTransaction/ModalAddTransaction';\nimport ModalEditTransaction from 'components/ModalEditTransaction/ModalEditTransaction';\nimport Balance from 'components/Balance/Balance';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllTransactions());\n  }, [dispatch]);\n\n  const data = useSelector(selectAllTransactions);\n\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isEditModalOpen, setisEditModalOpen] = useState(false);\n\n  const screenCondition = useMediaQuery({ query: '(min-width: 768px)' });\n\n  const [forcedLoading, setForcedLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => setForcedLoading(false), 1500);\n  }, [forcedLoading]);\n\n  const animation = 'animate__animated  animate__fadeIn animate__slow';\n\n  return (\n    <>\n      <div className={`${styles.HomePage} ${animation}`}>\n        {!screenCondition && <Balance />}\n\n        {data?.length === 0 && (\n          <p className={styles.noDataMessage}>\n            There are no saved transactions to be displayed. You can press the\n            plus button in the bottom left corner to add some\n          </p>\n        )}\n\n        {data?.length > 0 && screenCondition ? (\n          <TransactionsTable\n            data={data}\n            openDeleteModal={() => setIsDeleteModalOpen(true)}\n            openEditModal={() => setisEditModalOpen(true)}\n          />\n        ) : (\n          <TransactionsList\n            data={data}\n            openDeleteModal={() => setIsDeleteModalOpen(true)}\n            openEditModal={() => setisEditModalOpen(true)}\n          />\n        )}\n\n        <ButtonAddTransactions openAddModall={() => setIsAddModalOpen(true)} />\n      </div>\n\n      <>\n        {isAddModalOpen &&\n          createPortal(\n            <ModalAddTransactionNew\n              closeModal={() => setIsAddModalOpen(false)}\n            />,\n            document.body\n          )}\n\n        {isDeleteModalOpen &&\n          createPortal(\n            <ModalDeleteTransaction\n              closeModal={() => setIsDeleteModalOpen(false)}\n            />,\n            document.body\n          )}\n\n        {isEditModalOpen &&\n          createPortal(\n            <ModalEditTransaction\n              closeModal={() => setisEditModalOpen(false)}\n            />,\n            document.body\n          )}\n      </>\n    </>\n  );\n};\n\nexport default HomePage;\n","import { Navigate } from 'react-router-dom';\nimport HomePage from './HomePage';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from '../../redux/auth/selectors';\n\nconst RestrictedHomePage = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  return isLoggedIn ? <HomePage /> : <Navigate to=\"/\" />;\n};\n\nexport default RestrictedHomePage;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectAllTransactions = state => state.transactions.items;\n\nconst selectTransactionsSummary = state => state.transactions.summary;\n\nconst selectCategoriesSummary = state =>\n  state.transactions.summary?.categoriesSummary;\n\nconst selectFilteredCategories = createSelector(\n  [selectCategoriesSummary],\n  categoriesSummary => {\n    return categoriesSummary?.filter(item => item.name !== 'Income');\n  }\n);\n\nconst selectTrasactionIdForDelete = state =>\n  state.transactions.trasactionIdForDelete;\n\nconst selectTransactionForUpdate = state =>\n  state.transactions.transactionForUpdate;\n\nconst selectIsLoading = state => state.transactions.isLoading;\n\nexport {\n  selectAllTransactions,\n  selectTransactionsSummary,\n  selectTrasactionIdForDelete,\n  selectTransactionForUpdate,\n  selectFilteredCategories,\n  selectIsLoading,\n};\n"],"names":["transactionCategories","id","name","type","getTransactionId","transactionCategory","find","item","getTransactionCategory","transactionId","formatData","unixData","year","Date","getFullYear","mounth","getMonth","day","getDate","doubleDigitsFormatMounth","String","padStart","doubleDigitsFormatDay","concat","Months_OPTIONS","value","label","CURRENT_YEAR","YEARS_OPTIONS","getTrasactionCategoryColor","category","_ref","openAddModall","_jsx","className","styles","onClick","children","href","icons","transaction","openDeleteModal","openEditModal","categoryId","comment","amount","transactionDate","dispatch","useDispatch","textClass","borderClass","_jsxs","setTrasactionIdForDelete","setTrasactionForUpdate","_objectSpread","data","map","TransactionItem","TransactionTableRow","closeModal","trasactionIdForDelete","useSelector","selectTrasactionIdForDelete","useEffect","document","body","style","overflow","addCloseEvent","event","key","addEventListener","removeEventListener","screenCondition","useMediaQuery","query","currentTarget","target","Logo","variant","FormButton","text","handlerFunction","deteleTransaction","unwrap","then","getUserInfo","catch","error","console","log","_useState","useState","_useState2","_slicedToArray","isOnIncomeTab","setIsOnIncomeTab","_useState3","_useState4","startDate","setStartDate","validationSchema","Yup","required","Formik","initialValues","onSubmit","values","_ref2","setSubmitting","setStatus","addTransaction","success","_ref3","isSubmitting","Form","onChange","checked","htmlFor","Field","as","autoFocus","hidden","ErrorMessage","component","min","placeholder","ReactDatePicker","dateFormat","selected","date","calendarStartDay","FiCalendar","isDisabled","_Fragment","AddTransactionForm","transactionForUpdate","selectTransactionForUpdate","modifyTransaction","transactionData","EditTransactionForm","fetchAllTransactions","selectAllTransactions","isAddModalOpen","setIsAddModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","_useState5","_useState6","isEditModalOpen","setisEditModalOpen","_useState7","_useState8","forcedLoading","setForcedLoading","setTimeout","Balance","length","TransactionsTable","TransactionsList","ButtonAddTransactions","createPortal","ModalAddTransactionNew","ModalDeleteTransaction","ModalEditTransaction","selectIsLoggedIn","HomePage","Navigate","to","state","transactions","items","selectTransactionsSummary","summary","selectFilteredCategories","createSelector","_state$transactions$s","categoriesSummary","filter","selectIsLoading","isLoading"],"sourceRoot":""}